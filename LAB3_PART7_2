#include <WiFi.h>

  const char *ssid     = "EN20385750";
  const char *password = "12345678";

  const char LED1 = 26;
  const char LED2 = 27;

  TaskHandle_t Task_A;
  TaskHandle_t Task_B;

  WiFiServer server(80);

  void Connect_WIFI(void *parameters){
    Serial.print("Connecting to ");
    Serial.println(ssid);

    WiFi.begin(ssid, password);

    while (WiFi.status() != WL_CONNECTED);
        
        


    Serial.println("");
    Serial.println("WiFi connected.");
    Serial.println("IP address: ");
    Serial.println(WiFi.localIP());

    xTaskCreatePinnedToCore(Control_LED,
                            "control LED", 
                            10000,
                            NULL,
                            1,
                            &Task_B,
                            1);
                

   vTaskDelete(Task_A);
  }
  
void Control_LED(void *parameters){
  server.begin();
  while(1){
  WiFiClient client = server.available();   

  if (client) {                
    Serial.println("New Client.");           
    String currentLine = "";               
    while (client.connected()) {          
      if (client.available()) {            
        char c = client.read();            
        Serial.write(c); 
                          
        if (c == '\n') {                   
          if (currentLine.length() == 0) {
            client.println("HTTP/1.1 200 OK");
            client.println("Content-type:text/html");
            client.println();

            // the content of the HTTP response follows the header:
            client.print("Click <a href=\"/H1\">here</a> to turn the LED1 ON<br>");
            client.print("Click <a href=\"/L1\">here</a> to turn the LED1 OFF<br>");

            client.print("Click <a href=\"/H2\">here</a> to turn the LED2 ON<br>");
            client.print("Click <a href=\"/L2\">here</a> to turn the LED2 OFF<br>");

            client.println();
            break;
          } else {   
            currentLine = "";
          }
        } else if (c != '\r') {  
          currentLine += c;   
        }

        if (currentLine.endsWith("GET /H1")) {
          digitalWrite(LED1, HIGH);               
        }
        if (currentLine.endsWith("GET /L1")) {
          digitalWrite(LED1, LOW);               
        }
      }

        if (currentLine.endsWith("GET /H2")) {
          digitalWrite(LED2, HIGH);              
        }
        if (currentLine.endsWith("GET /L2")) {
          digitalWrite(LED2, LOW);              
        }
      }
    }
    client.stop();
    Serial.println("Client Disconnected");
   
}
}


void setup()
{
    Serial.begin(115200);
    delay(10);
    
    pinMode(LED1, OUTPUT);      
    pinMode(LED2, OUTPUT);
    delay(10);

  xTaskCreatePinnedToCore(Connect_WIFI,
                          "Connect to WIFI",
                           10000,
                           NULL,
                           1,
                           &Task_A,
                           0);
}

void loop(){
  
}
