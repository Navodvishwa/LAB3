#if CONFIG_FREERTOS_UNICORE
static const BaseType_t app_cpu = 0;
#else
static const BaseType_t app_cpu = 1;
#endif

static const int Blink_LED = 2;

void Toggle_LED_500ms(void *parameter){
  while(1){
  digitalWrite(Blink_LED,HIGH);
  vTaskDelay(500 / portTICK_PERIOD_MS);
  digitalWrite(Blink_LED,LOW);
  vTaskDelay(500 / portTICK_PERIOD_MS);
  }
}

void Toggle_LED_300ms(void *parameter){
  while(1){
    digitalWrite(Blink_LED,HIGH);
    vTaskDelay(300 / portTICK_PERIOD_MS);
    digitalWrite(Blink_LED,LOW);
    vTaskDelay(300 / portTICK_PERIOD_MS);
    }
  }
  
void setup() {
  pinMode(Blink_LED,OUTPUT);

  xTaskCreatePinnedToCore(Toggle_LED_500ms,
                          "Toggle LED_500ms",
                          1024,//size of stack
                          NULL,//perameter to pass to the function
                          1,//Task priority
                          NULL,//Task handle or Pointer to cheack status memory usage and end if necessary
                          0);//run on CPU 0

  xTaskCreatePinnedToCore(Toggle_LED_300ms,
                          "Toggle LED_300ms",
                          1024,
                          NULL,
                          1,
                          NULL,
                          0);
                          

}

void loop() {
 

}
